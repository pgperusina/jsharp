import hola.j , funciones-recursivas.v2.j;

Integer Var1 = 5;
abc[] Var1 = 5;
Global Var2 := 10.24;
const Var3 := true && true || false;
String String = "juan-á";
CHAR a = 'a';
boolean v2,v3,v4 = true;
global var_numeric := 1+1*2;
double base,altura;

// Asignaciones
String = "abc";
var1.uno.valor2 = 4*4;

BooLean bb = 2 != (3++);
BooLean ab = 2 == (3--);
BooLean cc = 4 <= 6;
bool z = !false && true;
GLobal ze := "abc" === "abC";

if ( (1*3)^^2 > 55 && false) {
    const dos := 44;
}

if ( (1*3)^^2 > 4 && false) {
    CHAR b = 'b';
} else {
    const tres := 44;
}

if ((1*3)^^2 > 4 && false) {
    const cuatro := 44;
    break;
} else if (-2==-(1+1)) { 
    Global cinco := 453.24;
}

Switch ((1+1)^^2) {
    case 4: 
        const x := "abc";
        breaK;
    case 'C':
        var y := "y";
    case "cuatro":
        global glo := "cuatro";
    default :
        integer[] intArr = "ab";
}


while (b > 5) {
    var k := true;
    continue;
}

do {
    var dowhile := 2*5;
    x = x + y;
    return x;
} while (j == 2)

for(integer t=0; t<10; t++) {
    const forTT := "ForTT";
}

for(; t<10; t++) {
    const forTT2 := "ForTT2";
}

for(;;) {
    const emptyFor := "emptyFor";
}

for(;a<3;) {
    const conditionFor := "conditionFor";
}

char factorial(integer a) {
    boolean varFactorial = "juan-á";
    integer varFactGlobal = 'x';
    fac = 31;
    x = factorial(2,3);
 
}

x = factorial(4,5);
factorial();
factorial($x);
factorial(a=2.5, b='x', d="uno");

print(a);
print(2+4*34);
print(llamada());

try {
    integer dividendo = 10;
    if (divisor < 0) {
        boolean vv = true;
        throw strC ArithmeticException();
    }
} catch (ArithmeticException e) {
    print(e.message.option);
}

Global var1 := "Cadena"; 
String [] cadena = var1.toCharArray();

Global var1 := "Cadenita";
char cad = var1.VAR33.toUpperCase().toLowerCase().charAt(0);

Estudiante[] est = strc Estudiante[2];
Integer[] var1 = {1,2,3,4};
double[] pra = {1,2,3};
Var Var2 := {"HOLA","Luis","Como","Estás"};